name: Deploy Frontend
on:
  workflow_dispatch: 
    
jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: af-south-1

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies and build frontend
        working-directory: frontend
        run: |
          npm install
          npm run build

      - name: Deploy to S3
        working-directory: frontend
        run: |
          aws s3 sync ./dist/ s3://screen-supplier-frontend-static-1 --delete

      - name: Invalidate CloudFront cache
        run: |
          # Get CloudFront distribution ID for frontend
          DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Origins.Items[0].DomainName=='screen-supplier-frontend-static-1.s3.af-south-1.amazonaws.com'].Id" --output text)
          
          if [ -n "$DISTRIBUTION_ID" ]; then
            aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
            echo "CloudFront cache invalidated for distribution: $DISTRIBUTION_ID"
          else
            echo "CloudFront distribution not found"
            exit 1
          fi
          
      - name: Get CloudFront URL
        run: |
          DISTRIBUTION_DOMAIN=$(aws cloudfront list-distributions --query "DistributionList.Items[?Origins.Items[0].DomainName=='screen-supplier-frontend-static-1.s3.af-south-1.amazonaws.com'].DomainName" --output text)
          echo "Frontend deployed successfully!"
          echo "Frontend URL: https://$DISTRIBUTION_DOMAIN"